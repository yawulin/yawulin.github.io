<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>涯无凌</title>
  <subtitle>一枚渣渣前端工程师</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ywulin.com/"/>
  <updated>2018-04-06T09:04:21.763Z</updated>
  <id>http://blog.ywulin.com/</id>
  
  <author>
    <name>涯无凌</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端技术就我目前已知的汇总</title>
    <link href="http://blog.ywulin.com/201709102311.html"/>
    <id>http://blog.ywulin.com/201709102311.html</id>
    <published>2017-09-11T10:40:55.000Z</published>
    <updated>2018-04-06T09:04:21.763Z</updated>
    
    <content type="html"><![CDATA[<p>目前前端的技术很多，范围也很广，在这篇博客就我目前所知道的前端技术做个汇总，有些我也还没看过，在这里不会细谈，这篇博客会持续更新下去</p>
<a id="more"></a>
<blockquote>
<p>这里把分成前端和后端（Node），如果有什么地方讲的不对，欢迎指教，谢谢</p>
</blockquote>
<h3 id="一、前端"><a href="#一、前端" class="headerlink" title="一、前端"></a>一、前端</h3><hr>
<h4 id="1、ECMAScript"><a href="#1、ECMAScript" class="headerlink" title="1、ECMAScript"></a>1、ECMAScript</h4><ul>
<li><em><a href="http://es6.ruanyifeng.com/#docs/intro" target="_blank" rel="external">ECMAScript</a></em> : JavaScript 的标准，目前已发布到 ECMAScript 2017 了（这三年一年发布一个版本，除了 ES6 更新幅度很大，后面的两个版本都只是新增了部分语法或语法糖），文档是阮一峰老师写的<a href="http://es6.ruanyifeng.com/#docs/intro" target="_blank" rel="external">《ECMAScript 6 入门》</a>，讲的很详细，持续更新中，另外 Babel 这里给的 <a href="http://babeljs.cn/docs/learn-es2015/" target="_blank" rel="external">文档</a> 比较简短，适合查询用</li>
</ul>
<h4 id="2、Babel，让你使用下一代-JavaScript-标准"><a href="#2、Babel，让你使用下一代-JavaScript-标准" class="headerlink" title="2、Babel，让你使用下一代 JavaScript 标准"></a>2、Babel，让你使用下一代 JavaScript 标准</h4><ul>
<li><em><a href="http://babeljs.io/" target="_blank" rel="external">Babel</a></em> : 由于 ECMAScript 的新语法有些在浏览器上还没有被实现，所以 Babel 诞生了，它可以让你使用最新的 JavaScript 标准，并帮你自动将其转换为 ES5</li>
</ul>
<h4 id="3、JavaScript-转译语言"><a href="#3、JavaScript-转译语言" class="headerlink" title="3、JavaScript 转译语言"></a>3、JavaScript 转译语言</h4><ul>
<li><em><a href="http://coffee-script.org/" target="_blank" rel="external">CoffeeScript</a></em> : 一门编译到 JavaScript 的小巧语言</li>
<li><em><a href="https://www.tslang.cn/" target="_blank" rel="external">TypeScript</a></em> : 微软开发的一种编程语言，是 JavaScript 的一个超集，扩展了 JavaScript 的语法</li>
</ul>
<h4 id="4、强大的构建工具"><a href="#4、强大的构建工具" class="headerlink" title="4、强大的构建工具"></a>4、强大的构建工具</h4><blockquote>
<p>如果你还在自己手动地重复检查，合并，压缩，格式化文件，刷新浏览器这些枯燥的工作，那么你可以来尝试一下构建工具（选择自己喜欢的就好）</p>
</blockquote>
<ul>
<li><p><em><a href="https://rollupjs.org/" target="_blank" rel="external">rollup</a></em> : 中文文档 <a href="https://rollupjs.org/zh" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="https://gruntjs.com/" target="_blank" rel="external">Grunt</a></em> : 中文文档 <a href="http://www.gruntjs.net/" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="https://gulpjs.com/" target="_blank" rel="external">Gulp</a></em> : 中文文档 <a href="http://www.gulpjs.com.cn/" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="https://webpack.js.org/" target="_blank" rel="external">webpack</a></em> : 中文文档 <a href="https://webpack-china.org/" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="http://browserify.org/" target="_blank" rel="external">Browserify</a></em></p>
</li>
</ul>
<h4 id="5、ESlint-JS代码检测"><a href="#5、ESlint-JS代码检测" class="headerlink" title="5、ESlint JS代码检测"></a>5、<em><a href="http://eslint.cn/" target="_blank" rel="external">ESlint</a></em> JS代码检测</h4><blockquote>
<p>ESlint 定义了一套代码风格的规则，使用它可以让你的代码更具有可读性，适用于团队合作，以下是目前比较流行的两套 ESlint 标准</p>
</blockquote>
<ul>
<li><p><em><a href="https://standardjs.com/" target="_blank" rel="external">standard style</a></em></p>
</li>
<li><p><em><a href="http://airbnb.io/javascript/" target="_blank" rel="external">Airbnb JavaScript Style Guide</a></em></p>
</li>
</ul>
<h4 id="6、stylelint，CSS-代码检测"><a href="#6、stylelint，CSS-代码检测" class="headerlink" title="6、stylelint，CSS 代码检测"></a>6、stylelint，CSS 代码检测</h4><ul>
<li><em><a href="https://stylelint.io/" target="_blank" rel="external">stylelint</a></em> : 一个强大的现代 CSS 检测器，可以让你在样式表中遵循一致的约定和避免错误，中文文档 <a href="http://stylelint.cn/" target="_blank" rel="external">点击这里</a></li>
</ul>
<h4 id="7、不可缺少的测试"><a href="#7、不可缺少的测试" class="headerlink" title="7、不可缺少的测试"></a>7、不可缺少的测试</h4><blockquote>
<p>一个项目，一个工具，一个插件，如果你不做测试，那么其稳定性无法保证</p>
</blockquote>
<ul>
<li><p><em><a href="http://karma-runner.github.io/1.0/index.html" target="_blank" rel="external">karma</a></em> : 测试管理工具</p>
</li>
<li><p><em><a href="http://mochajs.org/" target="_blank" rel="external">mocha</a></em> : 单元测试框架，可跟 karma 结合</p>
</li>
<li><p><em><a href="https://jasmine.github.io/" target="_blank" rel="external">jasmine</a></em> : 单元测试框架，可跟 karma 结合</p>
</li>
<li><p><em><a href="http://nightwatchjs.org/" target="_blank" rel="external">Nightwatch</a></em> : 端对端测试框架，模拟用户行为的测试</p>
</li>
<li><p><em><a href="http://casperjs.org/" target="_blank" rel="external">CasperJS</a></em> : 端对端测试框架，基于 PhantomJS</p>
</li>
<li><p><em><a href="http://www.protractortest.org/#/" target="_blank" rel="external">Protractor</a></em> : AngularJS 的端对端测试框架</p>
</li>
</ul>
<h4 id="8、优秀的-JavaScript-代码库-——-jQuery-amp-amp-Zepto"><a href="#8、优秀的-JavaScript-代码库-——-jQuery-amp-amp-Zepto" class="headerlink" title="8、优秀的 JavaScript 代码库 —— jQuery &amp;&amp; Zepto"></a>8、优秀的 JavaScript 代码库 —— jQuery &amp;&amp; Zepto</h4><ul>
<li><p><em><a href="http://api.jquery.com/" target="_blank" rel="external">jQuery</a></em> : 提供了一系列方便的 API ，包含选择器，Dom 处理，JS 动画，事件处理等，兼容性好。个人喜欢使用这个 <a href="http://jquery.cuishifeng.cn/" target="_blank" rel="external">文档</a> ，一个 jQuery 速查表</p>
</li>
<li><p><em><a href="http://www.zeptojs.cn/" target="_blank" rel="external">Zepto</a></em> : Zepto 是一个更轻量级的代码库，保留了 jQuery 的大部分 api 名字，同时对移动端做了适配，适合用于移动端开发</p>
</li>
</ul>
<h4 id="9、Web框架"><a href="#9、Web框架" class="headerlink" title="9、Web框架"></a>9、Web框架</h4><blockquote>
<p>这几个框架中我目前就用到了 Vue，React 正在学习，其他的尚未使用，这里我会对 Vue 的篇幅多一点，抱歉，若有什么讲的不对的，请帮忙指正</p>
</blockquote>
<ul>
<li><p><em><a href="https://cn.vuejs.org/" target="_blank" rel="external">Vue</a></em> : 尤雨溪大大开发的一个轻量的 MVVM 框架，目前在国内很火，很多大厂也开始用 Vue 重构项目了</p>
<blockquote>
<p>Vue 社区 : <a href="https://www.vue-js.com/" target="_blank" rel="external">https://www.vue-js.com/</a> ，可在这里寻找开源项目练手<br>Github上面基于 Vue 的项目 : <a href="https://github.com/vuejs/awesome-vue" target="_blank" rel="external">https://github.com/vuejs/awesome-vue</a></p>
</blockquote>
<ul>
<li><p>Vue 全家桶</p>
<ul>
<li><a href="https://router.vuejs.org/zh-cn/" target="_blank" rel="external">Vue-Router</a> : Vue 官方路由插件</li>
<li><a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="external">Vuex</a> : Vue 官方状态管理插件</li>
<li><a href="https://www.npmjs.com/package/axios" target="_blank" rel="external">axios</a> : Vue 官方推荐 HTTP 客户端</li>
</ul>
</li>
<li><p>基于 Vue 的 UI 组件库</p>
<ul>
<li><a href="http://mint-ui.github.io/#!/zh-cn" target="_blank" rel="external">Mint-UI</a> : 饿了么开源的一个适用于移动端的 UI 组件库，样式简洁</li>
<li><a href="http://www.muse-ui.org/" target="_blank" rel="external">Muse-UI</a> : 一款运用了 Google 的 Material Design 设计理念的UI组件库</li>
<li><a href="http://vue-material.com/#/" target="_blank" rel="external">Vue-Material</a> : 一款运用了 Google 的 Material Design 设计理念的UI组件库</li>
<li><a href="https://vux.li/#/" target="_blank" rel="external">Vux</a> : 基于微信开源的 WeUI 进行开发的一套 Vue 组件库，封装好了微信的 jssdk，很适合开发用于微信的移动端网页</li>
<li><a href="http://element.eleme.io/#/" target="_blank" rel="external">Element UI</a> : 饿了么开源的 Vue 组件库，比较适合用于 PC 端网页的开发</li>
</ul>
<blockquote>
<p>除了以上所列出的组件库，还有其他不少优秀的组件库，这里不再陈列了</p>
</blockquote>
</li>
</ul>
</li>
<li><p><em><a href="https://facebook.github.io/react/" target="_blank" rel="external">React</a></em> : Facebook 开源的一款用于 UI 的 JS 库，社区很活跃，语法不多（相比较于 Vue），性能出众，代码逻辑非常简单（套用阮一峰老师的话），中文文档 <a href="https://doc.react-china.org/" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="https://angularjs.org/" target="_blank" rel="external">Angular</a></em> : Google 开发的一个 MVVM 框架，曾经的 AngualarJS 1.0 其 watcher 越多会导致项目越慢，它使用了脏检查循环。你会发现 Vue 的一些语法跟 Angular 很像，因为 Angular 是 Vue 早期开发的灵感来源。现在 AngularJS 已经升级到2.0了，代码优化了不少，性能也改进了</p>
</li>
</ul>
<blockquote>
<p>以上框架的对比，详细查看 <a href="https://cn.vuejs.org/v2/guide/comparison.html" target="_blank" rel="external">https://cn.vuejs.org/v2/guide/comparison.html</a> ，至于选择哪种框架看个人喜好，没有什么最好的，只有最适合自己的</p>
</blockquote>
<ul>
<li><em><a href="https://cycle.js.org/" target="_blank" rel="external">CycleJS</a></em> : 一个函数式和响应式的 JavaScript 框架，编写可观测代码</li>
</ul>
<h4 id="10、CSS-预处理器，提高你工作效率的好工具"><a href="#10、CSS-预处理器，提高你工作效率的好工具" class="headerlink" title="10、CSS 预处理器，提高你工作效率的好工具"></a>10、CSS 预处理器，提高你工作效率的好工具</h4><blockquote>
<p>css 预处理器的思想是用一种专门的编程语言来编写样式表，之后再将其编译成 css 文件</p>
</blockquote>
<ul>
<li><p><em><a href="http://sass-lang.com/" target="_blank" rel="external">Sass / Scss</a></em> : 基于 Ruby 编译，Scss 是Sass 3 引入的新的语法，兼容 CSS3，并继承了 Sass 的功能，Scss 语法对 CSS 友好，目前说 Sass，基本用的是 Scss 语法，插件也基本都是面向 Scss 的。编译的时候得安装 Ruby，或者使用 <a href="http://koala-app.com/index-zh.html" target="_blank" rel="external">koala</a> 这个工具，如果你是使用 webpack 等打包工具的话，有对应的插件可以使用，VSCode 等编辑器也有对应的插件。中文文档 <a href="https://sass-guidelin.es/zh/" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="http://lesscss.org/" target="_blank" rel="external">Less</a></em> : 基于 Node 编译的预处理器，语法没 Sass 那么多，但用起来也比较舒服，看个人喜欢了。</p>
</li>
<li><p><em><a href="http://www.zhangxinxu.com/jq/stylus/" target="_blank" rel="external">Stylus</a></em> : 基于 Node 编译的 CSS 预处理器，语法很强大，语法点多，写法有多种，很自由，在我制作 Hexo 博客主题的时候使用了其部分语法，刚学的时候可能无法驾驭住</p>
</li>
</ul>
<blockquote>
<p>以上预处理器各有优缺点，至于选择哪一种，同样的没有最好的，只有最适合自己的</p>
</blockquote>
<h4 id="11、Web-APP"><a href="#11、Web-APP" class="headerlink" title="11、Web APP"></a>11、Web APP</h4><blockquote>
<p>运行于移动端网页上，具备移动 APP 的部分特点，即使用网页实现的 APP，但不具备调用所有手机底层 API 的能力（曾经我有段时间将 web app 理解成了 Hybrid APP），以下介绍部分能用于开发 Web APP 的框架，部分使用过的框架会篇幅多一点</p>
</blockquote>
<ul>
<li><p><em>Vue + Vue-router + Vuex + axios( + UI组件库)</em> : Vue 的官方插件 Vue-router 可以实现路由跳转，Vuex可以用于存储登录状态等，axios 获取数据，再加上UI组件库可以帮你方便地构建出一款Web APP，Vue 的<code>transition</code>标签可以实现路由跳转动画。这里使用了前后端分离的思想，了解前后端分离，请走传送门：<a href="https://www.itcodemonkey.com/article/140.html" target="_blank" rel="external">前后端分离</a>。登录状态安全性请去了解<code>Token</code>机制和 Web本地存储（本地存储下面会简单介绍一下）</p>
</li>
<li><p><em><a href="http://jquerymobile.com/" target="_blank" rel="external">jQuery mobile</a></em> : jQuery 框架的一个组件</p>
</li>
<li><p><em><a href="http://frozenui.github.io/" target="_blank" rel="external">Frozen UI</a></em> : 一个开源的简单易用，轻量快捷的移动端UI框架。基于手Q样式规范，选取最常用的组件，做成手Q公用离线包减少请求，升级方式友好，文档完善，目前全面应用在腾讯手Q增值业务中（官方原话）</p>
</li>
<li><p><em><a href="http://ionicframework.com/docs/" target="_blank" rel="external">ionic</a></em> : 基于 Sass 和 Angular 的一个开源组件库，官方文档需要翻墙访问，可以阅读中文文档 <a href="http://www.ionic.wang/js_doc-index.html" target="_blank" rel="external">点击这里</a></p>
</li>
<li><p><em><a href="http://amazeui.org/getting-started?_ver=2.x" target="_blank" rel="external">Amaze UI</a></em> : 一个轻量级的用于移动端的框架</p>
</li>
<li><p><em><a href="http://framework7.io/docs/" target="_blank" rel="external">Framework7</a></em> : 淘宝开源的一个移动端组件库，分 iOS 样式和 Android 样式，它的理念是致力于打造接近原生的体验，实现了 iOS 的侧滑返回功能，所以很逼近 iOS 原生体验，它构建了一个轻量的 jQuery 语法框架，并基于其进行开发。该框架同时有适配 Vue 的 Framework7-Vue 和适配 React 的 Framework7-React，关于 Framework7-Vue，我用它重构了 Framework7 官网的 Demo，Github 的地址在这：<a href="https://github.com/yawuling/vue-framework7" target="_blank" rel="external">vue-framework7</a>，并对其遇到的一些问题写了几篇博客，请走 <a href="http://blog.ywulin.com/tags/framework7/">传送门</a><br>（Framework7 的文档分了好几个域名展示，每个文档的更新程度不一致，以上所展示的地址是一直保持着最新内容，其他链接目前没有更新了）</p>
</li>
</ul>
<blockquote>
<p>Web APP 的框架很多，你可以自己去搜索，以上就只列了部分而已</p>
</blockquote>
<h4 id="12、Hybrid-APP"><a href="#12、Hybrid-APP" class="headerlink" title="12、Hybrid APP"></a>12、Hybrid APP</h4><blockquote>
<p>Hybrid APP ，译为混合 APP，即部分地方采用原生，部分地方使用 Web APP，现在有很多 APP 都采用这种开发模式，Web APP可以一套代码适用 iOS 和 Android 双平台，所以开发周期快，比如手Q就是这种开发模式，上面陈列的 Web APP 在外面包个壳就可以打包成 APP 了</p>
</blockquote>
<ul>
<li><p><em><a href="http://cordova.apache.org/" target="_blank" rel="external">Cordova</a></em> : 一个 Web APP 打包工具，是 Phonegap 捐赠给 Apache 后使用的项目名，它给 Web 提供了一个 Web 容器供其运行，官方提供了调用手机底层 API 插件，能实现多端打包，此外还有不少用户开发封装的第三方插件，以上提及的 Web APP 框架基本可用该工具打包成 APP</p>
</li>
<li><p><em>Angular + ionic + Phonegap</em> : 目前比较流行的 Hybrid APP 开发技术选型，ionic 提供了很多方便好用的功能</p>
</li>
<li><p><em>Vue + Framework7-Vue + Cordova</em> : Vue 的 Hybrid APP 之路比较短，目前没有常见的技术选型，以上是我实践过后的技术选型，在 iOS 上可以达到以假乱真的程度，在 Android 上的话还需要加上 <a href="https://crosswalk-project.org/" target="_blank" rel="external">crosswork</a> 这个工具，才不至于太卡，另外转场动画可能会比较单一（Vue 的 transition 在使用手机的返回时会重新执行一遍动画）</p>
</li>
<li><p><em><a href="http://www.html5plus.org/doc/zh_cn/accelerometer.html" target="_blank" rel="external">H5+</a> + <a href="http://dev.dcloud.net.cn/mui/" target="_blank" rel="external">MUI</a></em> :  H5+ 是 DCloud 提出的一套标准，它可以让我们使用 JS 调用手机底层40万 API，API 使用起来简单，MUI 是官方配套的一套组件库，配合官方编辑器 HBuilder 可以很方便地进行远程打包安装。2017年3月份我使用的时候它的社区还不是很完善，按照其他人的评价就是社区大多是张口问问题，但分享的却很少，现在不知道怎么样（这里我自觉惭愧，我也曾经当过其中的一员，后面项目结束后想着把遇到的问题的解决方案分享出来的，拖着拖着就已经把内容忘了）。总结起来就是用法很简单，但部分技术问题没有提供解决措施。</p>
</li>
</ul>
<h4 id="13、使用前端技术来构建原生-APP"><a href="#13、使用前端技术来构建原生-APP" class="headerlink" title="13、使用前端技术来构建原生 APP"></a>13、使用前端技术来构建原生 APP</h4><blockquote>
<p>以下都需要具备一定的原生知识</p>
</blockquote>
<ul>
<li><p><em><a href="https://facebook.github.io/react-native/" target="_blank" rel="external">React Native</a></em> : 按照我的理解，React Native 是使用 React 的写法去调用原生组件，只不过 React 是调用 HTML 标签，虽然说 React Native 可以用一套代码实现 iOS 和 Android 双端，但大多数时候还是得写两套代码。曾经 React Native 最大的优势是热更新（热更新这里自己去查，我没用过，也不怎么了解），不过目前已被苹果给禁了，基于 React Native 的项目依旧可以过审。React Native 社区是目前最活跃的，很多坑也已经被踩平了，可以放心用。</p>
</li>
<li><p><em><a href="http://weex.apache.org/" target="_blank" rel="external">Weex，又叫 Vue Native</a></em> : 阿里开源的一个基于 Vue 语法的框架，一套代码使用于 PC，APP，Web 三端，2017年发布的，目前文档还在完善中，社区还不活跃，Vue 的开发者尤雨溪大大参与了该项目，并发布了一个用 weex 开发的 APP</p>
</li>
<li><p><em><a href="https://www.nativescript.org/" target="_blank" rel="external">NativeScript</a></em> : 国外开发者自行发起的一个开源项目，所以没有大厂做靠背，它的理念是使用 JavaScript 构建原生，其定义了一系列标签，用于同时适配 iOS 和 Android，所以构建出来的项目就是原生，不过目前标签还不完善，部分组件还未实现，它跟 Angular 和 Vue 不冲突，目前已有人实现了 NativeScript 和 Angular 和 Vue 的结合</p>
</li>
</ul>
<h4 id="14、前端也能圆桌面程序梦"><a href="#14、前端也能圆桌面程序梦" class="headerlink" title="14、前端也能圆桌面程序梦"></a>14、前端也能圆桌面程序梦</h4><ul>
<li><em><a href="https://electron.atom.io/" target="_blank" rel="external">Electron</a></em> : Github 开源的一个打包工具，Atom 和 VSCode 都是用这个工具开发的，他可以将你编写的 Web 打包成三端（Windows，Mac，Linux）的安装程序。该工具使用了 Chrome V8 引擎用于渲染界面，本身提供了一些 API，同时我们也可以使用 Node 的 API。该工具有与 Vue 结合使用的初始化模块和文档，UI 框架可以选用 Element UI。中文文档 <a href="https://electron.org.cn/" target="_blank" rel="external">点击这里</a></li>
</ul>
<h4 id="15、前后端分离的数据模拟"><a href="#15、前后端分离的数据模拟" class="headerlink" title="15、前后端分离的数据模拟"></a>15、前后端分离的数据模拟</h4><ul>
<li><em><a href="http://mockjs.com/" target="_blank" rel="external">MockJS</a></em> : 前后端分离的开发模式，前端与后端先约定好数据格式和 API，在后端 API 还没封装好时，我们可以使用 MockJS 生成随机数据进行开发，提高工作效率</li>
</ul>
<h4 id="16、JS-模块规范"><a href="#16、JS-模块规范" class="headerlink" title="16、JS 模块规范"></a>16、JS 模块规范</h4><blockquote>
<p>在 ES6 还没出来之前，JS 在浏览器方面没有模块规范（后端 Node 有 CommonJS 标准），以下是目前浏览器端的两个模块规范</p>
</blockquote>
<ul>
<li><p><em><a href="https://github.com/amdjs/amdjs-api/wiki/AMD" target="_blank" rel="external">AMD</a></em> : 异步模块定义</p>
</li>
<li><p><em>CMD</em> : 大名远扬的玉伯提出的规范，并根据其标准写了个 <a href="http://yslove.net/seajs/" target="_blank" rel="external">sea.js</a> （CMD找不到官方文档）</p>
</li>
<li><p><em>ES6</em> : ES6 标准提供了模块的定义，使用<code>export</code>导出模块的内容，使用<code>import</code>引入想要使用的模块</p>
</li>
</ul>
<h4 id="17、浏览器本地存储"><a href="#17、浏览器本地存储" class="headerlink" title="17、浏览器本地存储"></a>17、浏览器本地存储</h4><ul>
<li><p><em>localstorage</em> : 没有时间限制的数据存储，一般浏览器支持的是 5M 大小，以键值对的形式存储</p>
</li>
<li><p><em>sessionstorage</em> : 针对一个 session 的数据存储，只存在于当前会话，页面关闭或者浏览器关闭即消失</p>
</li>
<li><p><em>cookie</em> : 有时间限制的数据存储</p>
</li>
<li><p><em>webSQL</em> : 本地关系型数据库，目前已不再更新，浏览器一般支持 5M</p>
</li>
<li><p><em>indexDB</em> : 本地非关系型数据库，浏览器一般支持 5M</p>
</li>
</ul>
<h4 id="18、微信小程序"><a href="#18、微信小程序" class="headerlink" title="18、微信小程序"></a>18、微信小程序</h4><ul>
<li><em><a href="https://mp.weixin.qq.com/debug/wxadoc/dev/" target="_blank" rel="external">微信小程序</a></em> : 基于微信的程序，语法有点像 Vue</li>
</ul>
<h4 id="19、PWA"><a href="#19、PWA" class="headerlink" title="19、PWA"></a>19、PWA</h4><ul>
<li><em><a href="https://developers.google.com/web/progressive-web-apps/" target="_blank" rel="external">PWA</a></em> : 谷歌和百度联合推出的一门技术，能使你的 Web APP 表现得就像是 native mobile APP （官方文档需要翻墙，这里可以访问简书作者 “短衣匹马” 的<a href="http://www.jianshu.com/p/4e9d14fcb9de" target="_blank" rel="external">译文</a>）</li>
</ul>
<h3 id="二、后端-Node"><a href="#二、后端-Node" class="headerlink" title="二、后端 Node"></a>二、后端 Node</h3><hr>
<blockquote>
<p>Node 是后端的领域了，目前我了解的不多，暂时没有余力去成为全栈工程师，以下简单地罗列我所了解的</p>
</blockquote>
<h4 id="1、Node"><a href="#1、Node" class="headerlink" title="1、Node"></a>1、Node</h4><ul>
<li><em><a href="https://nodejs.org/dist/latest-v8.x/docs/api/" target="_blank" rel="external">Node</a></em> : 使用 JavaScript 作为开发语言，并对其进行扩展，前端工程师能够快速入手，中文文档 <a href="http://nodejs.cn/api/" target="_blank" rel="external">点击这里</a></li>
</ul>
<h4 id="2、NPM"><a href="#2、NPM" class="headerlink" title="2、NPM"></a>2、NPM</h4><ul>
<li><em><a href="https://www.npmjs.com/" target="_blank" rel="external">NPM</a></em> : Node 的包管理工具，由于 NPM 的仓库是架设在国外服务器上的，在国内下载速度慢，可以使用淘宝搭建的仓库，它实时保持着与官方仓库的一致，淘宝提供的包管理工具<code>cnpm</code>，安装依赖包的时候使用<code>cnpm</code>，构建项目的时候还是使用<code>npm</code></li>
</ul>
<h4 id="3、CommonJS-规范"><a href="#3、CommonJS-规范" class="headerlink" title="3、CommonJS 规范"></a>3、CommonJS 规范</h4><ul>
<li><em>CommonJS</em> ： 是 Node 提出的 JS 模块规范，使用<code>export</code>导出模块的内容，使用<code>require</code>引入想要使用的模块</li>
</ul>
<h4 id="4、Web-后台框架"><a href="#4、Web-后台框架" class="headerlink" title="4、Web 后台框架"></a>4、Web 后台框架</h4><ul>
<li><p><em><a href="http://www.expressjs.com.cn/4x/api.html" target="_blank" rel="external">express</a></em> : 其针对 Node 的 http 模块封装了一系列 API，将底层实现好了，它让我们不再需要自己去实现底层逻辑，只需要专注于业务的实现，express 同时也提供了 https 请求机制</p>
</li>
<li><p><em><a href="http://koa.bootcss.com/" target="_blank" rel="external">koa</a></em> : express 原班人马打造，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。使用 koa 编写 Web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套，并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件，它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。（取自koa中文文档）</p>
</li>
</ul>
<h4 id="5、模板引擎"><a href="#5、模板引擎" class="headerlink" title="5、模板引擎"></a>5、模板引擎</h4><blockquote>
<p>node 作为后端，返回给浏览器的是静态文件，它没有 Java 的 jsp 服务器页面，所以就有了模板引擎，通过 node 提供的 文件操作 api 读取文件的内容，然后将数据替换到对应的位置，模板引擎也可用于客户端开发，以下只罗列几个，更多的模板引擎请自行搜索</p>
</blockquote>
<ul>
<li><p><em><a href="http://jade-lang.com/" target="_blank" rel="external">Jade</a></em> </p>
</li>
<li><p><em><a href="http://mustache.github.io/" target="_blank" rel="external">Mustache</a></em></p>
</li>
<li><p><em><a href="http://www.embeddedjs.com/" target="_blank" rel="external">EJS</a></em></p>
</li>
</ul>
<h4 id="6、数据库"><a href="#6、数据库" class="headerlink" title="6、数据库"></a>6、数据库</h4><blockquote>
<p>数据库我目前就了解 MongoDB 而已，以下也只列这一个</p>
</blockquote>
<ul>
<li><em><a href="http://www.runoob.com/mongodb/mongodb-tutorial.html" target="_blank" rel="external">MongoDB</a></em> : 一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库（来自菜鸟教程）</li>
</ul>
<hr>
<p>前端路漫漫，离全栈工程师还有一段路要走</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;目前前端的技术很多，范围也很广，在这篇博客就我目前所知道的前端技术做个汇总，有些我也还没看过，在这里不会细谈，这篇博客会持续更新下去&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端杂谈" scheme="http://blog.ywulin.com/tags/%E5%89%8D%E7%AB%AF%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>Framework7+Framework7-vue+vue踩坑记（三）</title>
    <link href="http://blog.ywulin.com/201707240917.html"/>
    <id>http://blog.ywulin.com/201707240917.html</id>
    <published>2017-07-27T02:17:19.000Z</published>
    <updated>2018-04-06T09:00:21.813Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇博客“Framework7+Framework7-vue+vue踩坑记（二）”，这里继续 <code>framework7</code> + <code>vue</code> + <code>framework7-vue</code> 踩坑第三波。</p>
<a id="more"></a>
<hr>
<h3 id="1-Notification组件"><a href="#1-Notification组件" class="headerlink" title="1. Notification组件"></a>1. <code>Notification</code>组件</h3><p><code>framework7-vue</code>没有该组件，使用<code>framework7</code>的方式实现，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">this</span>.$f7.addNotification(&#123;</div><div class="line">  <span class="attr">title</span>: <span class="string">'Framework7'</span>,</div><div class="line">  <span class="attr">message</span>: <span class="string">'This is a simple notification message with title and message'</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="2-picker组件"><a href="#2-picker组件" class="headerlink" title="2. picker组件"></a>2. <code>picker</code>组件</h3><p><code>framework7-vue</code>没有该组件，使用<code>framework7</code>的方式实现，代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-list</span> <span class="attr">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Your iOS device"</span> <span class="attr">id</span>=<span class="string">"picker-device"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-input</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-list</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  mounted () &#123;</div><div class="line">    <span class="keyword">let</span> pickerDevice = <span class="keyword">this</span>.$f7.picker(&#123;</div><div class="line">      <span class="attr">input</span>: <span class="string">'#picker-device'</span>,</div><div class="line">      <span class="attr">cols</span>: [</div><div class="line">        &#123;</div><div class="line">          <span class="attr">textAlign</span>: <span class="string">'center'</span>,</div><div class="line">          <span class="attr">values</span>: [</div><div class="line">            <span class="string">'iPhone 4'</span>,</div><div class="line">            <span class="string">'iPhone 4S'</span>,</div><div class="line">            <span class="string">'iPhone 5'</span>,</div><div class="line">            <span class="string">'iPhone 5S'</span>,</div><div class="line">            <span class="string">'iPhone 6'</span>,</div><div class="line">            <span class="string">'iPhone 6 Plus'</span>,</div><div class="line">            <span class="string">'iPad 2'</span>,</div><div class="line">            <span class="string">'iPad Retina'</span>,</div><div class="line">            <span class="string">'iPad Air'</span>,</div><div class="line">            <span class="string">'iPad mini'</span>,</div><div class="line">            <span class="string">'iPad mini2'</span>,</div><div class="line">            <span class="string">'iPad mini3'</span>]</div><div class="line">        &#125;</div><div class="line">      ]</div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="3-下拉刷新"><a href="#3-下拉刷新" class="headerlink" title="3. 下拉刷新"></a>3. 下拉刷新</h3><p>下拉刷新是在<code>f7-page</code>中加上<code>pull-to-refresh</code>，以下是代码实现：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-page</span> <span class="attr">pull-to-refresh</span> @<span class="attr">ptr:refresh</span>=<span class="string">"onRefresh"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-navbar</span> <span class="attr">title</span>=<span class="string">"Pull To Refresh"</span> <span class="attr">back-link</span>=<span class="string">"Back"</span> <span class="attr">slding</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-link</span> <span class="attr">icon</span>=<span class="string">"icon icon-bars"</span> <span class="attr">open-panel</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-navbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list</span> <span class="attr">media-list</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-list-item</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span></span></div><div class="line">        <span class="attr">:media</span>=<span class="string">"item.media"</span></div><div class="line">        <span class="attr">:title</span>=<span class="string">"item.title"</span></div><div class="line">        <span class="attr">:subtitle</span>=<span class="string">"item.subtitle"</span></div><div class="line">      &gt;<span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-list-label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>Just pull page down to let the magic happen.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">            Note that pull-to-refresh feature is optimised for </div><div class="line">            touch and native scrolling so it may not work on </div><div class="line">            desktop browser.</div><div class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-list-label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-list</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-page</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  data () &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      <span class="attr">items</span>: [</div><div class="line">        &#123;</div><div class="line">          <span class="attr">media</span>: <span class="string">'&lt;img src="./static/image/photo12.jpg" width="44" /&gt;'</span>,</div><div class="line">          <span class="attr">title</span>: <span class="string">'Yellow Submarie'</span>,</div><div class="line">          <span class="attr">subtitle</span>: <span class="string">'Beatles'</span></div><div class="line">        &#125;, &#123;</div><div class="line">          <span class="attr">media</span>: <span class="string">'&lt;img src="./static/image/photo13.jpg" width="44" /&gt;'</span>,</div><div class="line">          <span class="attr">title</span>: <span class="string">'Don\'t Stop Me Now'</span>,</div><div class="line">          <span class="attr">subtitle</span>: <span class="string">'Queen'</span></div><div class="line">        &#125;, &#123;</div><div class="line">          <span class="attr">media</span>: <span class="string">'&lt;img src="./static/image/photo14.jpg" width="44" /&gt;'</span>,</div><div class="line">          <span class="attr">title</span>: <span class="string">'Billie Jean'</span>,</div><div class="line">          <span class="attr">subtitle</span>: <span class="string">'Michael Jackson'</span></div><div class="line">        &#125;</div><div class="line">      ]</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">methods</span>: &#123;</div><div class="line">    <span class="attr">onRefresh</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="keyword">let</span> self = <span class="keyword">this</span></div><div class="line"></div><div class="line">      setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">let</span> songs = [</div><div class="line">          <span class="string">'Yellow Submarine'</span>,</div><div class="line">          <span class="string">'Don\'t Stop Me Now'</span>,</div><div class="line">          <span class="string">'Billie Jean'</span>,</div><div class="line">          <span class="string">'Californication'</span></div><div class="line">        ]</div><div class="line">        <span class="keyword">let</span> authors = [</div><div class="line">          <span class="string">'Beatles'</span>,</div><div class="line">          <span class="string">'Queen'</span>,</div><div class="line">          <span class="string">'Michael Jackson'</span>,</div><div class="line">          <span class="string">'Red Hot Chili Peppers'</span></div><div class="line">        ]</div><div class="line">        <span class="keyword">let</span> item = &#123;</div><div class="line">          <span class="attr">media</span>: <span class="string">'&lt;img src="./static/image/photo'</span> + </div><div class="line">                  <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">14</span>) +</div><div class="line">                 <span class="string">'.jpg" width="44" /&gt;'</span>,</div><div class="line">          <span class="attr">title</span>: songs[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * songs.length)],</div><div class="line">          <span class="attr">subtitle</span>: authors[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * authors.length)]</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        self.items.unshift(item)</div><div class="line"></div><div class="line">        self.$f7.pullToRefreshDone()</div><div class="line">      &#125;, <span class="number">2000</span>)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="4-View间链接"><a href="#4-View间链接" class="headerlink" title="4. View间链接"></a>4. <code>View</code>间链接</h3><p>将在 <code>left view</code> 中的链接加载的页面放进 <code>main view</code>中，在 <code>a</code> 标签上加上 <code>data-view=&quot;###&quot;</code> （###为css选择器）即可</p>
<h3 id="5-sortable-list"><a href="#5-sortable-list" class="headerlink" title="5. sortable list"></a>5. <code>sortable list</code></h3><p>在<code>f7-list</code>的<code>sortable</code>属性为<code>true</code>时，通过<code>v-for=&quot;item in items&quot;</code>循环渲染列表，触发<code>@sortable:sort</code>事件时，不能对<code>items</code>进行操作，<code>framework7-vue</code>中<code>sortable</code>并没有操作<code>items</code>，而是对<code>Dom树</code>的操作，而<code>v-for</code>是先完成<code>virtual dom树</code>的修改再比对修改前的<code>virtual dom树</code>，然后对<code>Dom树</code>只修改变化的部分，而不是重排，这样会导致<code>Dom树</code>的列表又再一次按照我们之前的操作排列一次</p>
<h3 id="6-f7-swiper"><a href="#6-f7-swiper" class="headerlink" title="6. f7-swiper"></a>6. <code>f7-swiper</code></h3><p>该组件使用<code>nested</code>布局时无法正常显示导航条，使用原生实现，主要是该<code>vue组件</code>将<code>f7-swiper</code>中的内容全放到<code>.swiper-wrapper</code>中，因此就算自定义导航条的<code>css选择器</code>也无法正常显示</p>
<hr>
<p>至此，官网的demo已重构完毕，目前发现的需要注意的点就这些。</p>
<p>使用 <code>framework7-vue</code> 重构后的项目地址：<a href="https://github.com/yawuling/vue-framework7" target="_blank" rel="external">vue-framework7</a>，欢迎star</p>
<blockquote>
<p>项目初始化时，<code>framework7</code> 的参数中，<code>cache</code> 设置为 <code>false</code> 无效，原因未知。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上一篇博客“Framework7+Framework7-vue+vue踩坑记（二）”，这里继续 &lt;code&gt;framework7&lt;/code&gt; + &lt;code&gt;vue&lt;/code&gt; + &lt;code&gt;framework7-vue&lt;/code&gt; 踩坑第三波。&lt;/p&gt;
    
    </summary>
    
      <category term="webapp" scheme="http://blog.ywulin.com/categories/webapp/"/>
    
    
      <category term="vue" scheme="http://blog.ywulin.com/tags/vue/"/>
    
      <category term="framework7" scheme="http://blog.ywulin.com/tags/framework7/"/>
    
  </entry>
  
  <entry>
    <title>Framework7+Framework7-vue+vue踩坑记（二）</title>
    <link href="http://blog.ywulin.com/201707171854.html"/>
    <id>http://blog.ywulin.com/201707171854.html</id>
    <published>2017-07-19T15:38:44.000Z</published>
    <updated>2018-04-06T09:00:24.925Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇博客“Framework7+Framework7-vue+vue踩坑记（一）”，这里继续<code>framework7</code>+<code>vue</code>+<code>framework7-vue</code>踩坑第二波，同样通过重构官网demo来运用<code>framework-vue</code>。</p>
<a id="more"></a>
<hr>
<h3 id="1-f7-message组件图片显示问题"><a href="#1-f7-message组件图片显示问题" class="headerlink" title="1. f7-message组件图片显示问题"></a>1. <code>f7-message</code>组件图片显示问题</h3><p><code>f7-message</code>中无法在信息的<code>text</code>属性中使用<code>&lt;img src=&quot;##&quot;&gt;</code>标签，因为<code>vue</code>的模板语法是将html标签直接转换成字符串的，而在这篇博客编写时官方文档也没给出<code>f7-messages</code>中如何插入图片，如要实现以下效果</p>
<div align="center"><br><br>  <img src="http://oqn7d0y3s.bkt.clouddn.com/2017071701.jpg" alt="信息列表"><br><br></div>

<p>实现代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-messages</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-message</span> <span class="attr">v-for</span>=<span class="string">"message in messages"</span></span></div><div class="line">    <span class="attr">:text</span>=<span class="string">"message.text"</span></div><div class="line">    <span class="attr">:label</span>=<span class="string">"message.label"</span></div><div class="line">    <span class="attr">:date</span>=<span class="string">"message.date"</span></div><div class="line">    <span class="attr">:name</span>=<span class="string">"message.name"</span></div><div class="line">    <span class="attr">:avatar</span>=<span class="string">"message.avatar"</span></div><div class="line">    <span class="attr">:type</span>=<span class="string">"message.type"</span></div><div class="line">    <span class="attr">:day</span>=<span class="string">"message.day"</span></div><div class="line">    <span class="attr">:time</span>=<span class="string">"message.time"</span></div><div class="line">  &gt;</div><div class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">v-if</span>=<span class="string">"message.img"</span> <span class="attr">:src</span>=<span class="string">"message.img"</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-message</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-messages</span>&gt;</span></div></pre></td></tr></table></figure>
<p>我们可以看到<code>f7-message</code>的源代码中有一个不具名<code>slot</code>，所以父组件的内容会被插入到该<code>slot</code>所在的<code>Dom</code>位置，这一点是官方文档所没有说明的</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">"classesObject"</span> @<span class="attr">click</span>=<span class="string">"onClick"</span>&gt;</span></div><div class="line">    &#123;&#123;day&#125;&#125; <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"time"</span>&gt;</span>&#123;&#123;time&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"start"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-name"</span> <span class="attr">v-if</span>=<span class="string">"name"</span> @<span class="attr">click</span>=<span class="string">"onNameClick"</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-text"</span> @<span class="attr">click</span>=<span class="string">"onTextClick"</span>&gt;</span></div><div class="line">      //不具名slot</div><div class="line">      <span class="tag">&lt;<span class="name">slot</span>&gt;</span>&#123;&#123;text&#125;&#125;<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-date"</span> <span class="attr">v-if</span>=<span class="string">"date"</span>&gt;</span>&#123;&#123;date&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-avatar"</span> <span class="attr">v-if</span>=<span class="string">"avatar"</span> <span class="attr">:style</span>=<span class="string">"&#123;'background-image': 'url(' + avatar + ')'&#125;"</span> @<span class="attr">click</span>=<span class="string">"onAvatarClick"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message-label"</span> <span class="attr">v-if</span>=<span class="string">"label"</span>&gt;</span>&#123;&#123;label&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"end"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="2-f7-messagebar"><a href="#2-f7-messagebar" class="headerlink" title="2. f7-messagebar"></a>2. <code>f7-messagebar</code></h3><p>要使用<code>f7-messagebar</code>需要在组件的<code>f7-page</code>加上<code>no-toolbar</code>和<code>toolbar-fixed</code>，使用<code>no-toolbar</code>会隐藏掉所有的<code>.toolbar</code>，而<code>f7-message</code>渲染后根标签是带有<code>.toolbar</code>，因此需要对<code>f7-toolbar</code>的样式进行修改，如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;style lang="less" scoped&gt;</div><div class="line">.toolbar.messagebar&#123;</div><div class="line">  transform: none;</div><div class="line">  transition: 0ms;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<p>此外，<code>f7-message</code>中的<code>textarea</code>要进行数据双向绑定，直接在组件中使用<code>v-model</code>即可，代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-messagebar</span></span></div><div class="line">  <span class="attr">placeholder</span>=<span class="string">"Message"</span></div><div class="line">  <span class="attr">send-link</span>=<span class="string">"Send"</span></div><div class="line">  @<span class="attr">submit</span>=<span class="string">"onSubmit"</span></div><div class="line">  <span class="attr">v-model</span>=<span class="string">"messageText"</span>&gt;</div><div class="line">  <span class="tag">&lt;<span class="name">f7-link</span> <span class="attr">slot</span>=<span class="string">"before-textarea"</span> <span class="attr">class</span>=<span class="string">"icon-only"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">icon</span>=<span class="string">"icon icon-camera"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-messagebar</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="3-f7-picker-modal内嵌toolbar"><a href="#3-f7-picker-modal内嵌toolbar" class="headerlink" title="3. f7-picker-modal内嵌toolbar"></a>3. <code>f7-picker-modal</code>内嵌toolbar</h3><blockquote>
<p><em>2017.7.24 更新</em><br>修改，不能使用<code>navbar</code>，会出现位置错乱，改为<code>toolbar</code>。此外，<code>popup</code>需放在<code>app.vue</code>中，不能放在页面组件中，否则<code>navbar</code>也会出现位置错乱</p>
</blockquote>
<p>跟写一个页面的结构一样，在<code>f7-picker-modal</code>内部直接加入即可，在<code>f7-picker-modal</code>中的<code>toolbar</code>属于相对定位，所以不需要在<code>f7-picker-modal</code>中加上<code>toolbar-through</code></p>
<h3 id="4-router跳转到首页的方法"><a href="#4-router跳转到首页的方法" class="headerlink" title="4. $router跳转到首页的方法"></a>4. <code>$router</code>跳转到首页的方法</h3><p><code>$router</code>默认是使用<code>ajax</code>加载页面的，<code>.vue</code>页面中的<code>html</code>结构并不完整，<code>framework7-vue</code>是通过解析<code>.vue</code>中的内容，然后将内容插入到对应的位置，并实现过渡动画。因此，如果在<code>router.js</code>中加上<code>app.vue</code>的路由，那就是将<code>app.vue</code>的结构再嵌进<code>f7-pages</code>中，是无法正常显示的。目前我没有找到官方的方法来直接跳转到首页，因此是将<code>app.vue</code>中<code>f7-pages</code>里面的部分提取出来作为一个组件（结构跟其他<code>.vue</code>页面的结构一样，所以可以加上路由进行跳转），比如叫做<code>mainPage.vue</code>在<code>app.vue</code>中引入该组件，放到<code>f7-pages</code>里面，之后要跳转到首页就跟跳转到其他页面一样，将链接指向<code>mainPage.vue</code>的路由即可</p>
<blockquote>
<p><em>2017.7.25 更新</em><br>通过给主页面的<code>f7-page</code>加上<code>name=&quot;main&quot;</code>，在路由中使用<code>this.$router.load({pageName: &#39;main&#39;})</code>即可跳转到首页，无需将首页内容单独抽出作为一个组件</p>
</blockquote>
<h3 id="5-tabbar的实现"><a href="#5-tabbar的实现" class="headerlink" title="5. tabbar的实现"></a>5. tabbar的实现</h3><p>在framework7官网中，根据<code>f7+vue</code>的官方文档的<code>Navigation / Router</code>页面，实现<code>tabbar</code>功能，如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-toolbar</span> <span class="attr">tabbar</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">    <span class="attr">route-tab-link</span>=<span class="string">"#tab1"</span></div><div class="line">    <span class="attr">icon-f7</span>=<span class="string">"help"</span></div><div class="line">    <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/"</span></div><div class="line">  &gt;<span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">    <span class="attr">route-tab-link</span>=<span class="string">"#tab2"</span></div><div class="line">    <span class="attr">icon-f7</span>=<span class="string">"drawers"</span></div><div class="line">    <span class="attr">icon-badge</span>=<span class="string">"9"</span></div><div class="line">    <span class="attr">badge-color</span>=<span class="string">"red"</span></div><div class="line">    <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab2/"</span></div><div class="line">  &gt;<span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">    <span class="attr">route-tab-link</span>=<span class="string">"#tab3"</span></div><div class="line">    <span class="attr">icon-f7</span>=<span class="string">"cloud"</span></div><div class="line">    <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab3/"</span></div><div class="line">  &gt;<span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">    <span class="attr">route-tab-link</span>=<span class="string">"#tab4"</span></div><div class="line">    <span class="attr">icon-f7</span>=<span class="string">"camera"</span></div><div class="line">    <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab4/"</span></div><div class="line">  &gt;<span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-toolbar</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">f7-tabs</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">route-tab-id</span>=<span class="string">"tab1"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">route-tab-id</span>=<span class="string">"tab2"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">route-tab-id</span>=<span class="string">"tab3"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">route-tab-id</span>=<span class="string">"tab4"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-tabs</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//route.js</span></div><div class="line">&#123;</div><div class="line">  <span class="attr">path</span>: <span class="string">'/navbarsAndToolbars/tabbar/'</span>,</div><div class="line">  <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tabbar.vue'</span>),</div><div class="line">  <span class="attr">tabs</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab1'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab1.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab2/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab2'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab2.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab3/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab3'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab3.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab4/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab4'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab4.vue'</span>)</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上代码并不起作用，这段代码渲染后，在<code>.page-content</code>中渲染出来的<code>f7-tab</code>如下所示：</p>
<div align="center"><br><br>  <img src="http://oqn7d0y3s.bkt.clouddn.com/2017071703.jpg" alt="f7-tab的渲染"><br><br></div>

<p>再查看<code>framework7-vue</code>中的<code>tab.vue</code>的源代码，发现<code>tab</code>标签是在渲染的时候通过比对<code>$router</code>中的<code>tabId</code>跟<code>tab</code>的<code>id</code>是否相同，若相同，则在<code>f7-tab</code>中渲染<code>tabId</code>对应的<code>component</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//这里只取tab.vue中渲染的那段代码</span></div><div class="line">render: <span class="function"><span class="keyword">function</span> (<span class="params">c</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">  <span class="keyword">const</span> activeTab = self.routeInfo.activeTab;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> c(<span class="string">'div'</span>, &#123;</div><div class="line">    <span class="attr">staticClass</span>: <span class="string">'tab'</span>,</div><div class="line">    <span class="attr">attrs</span>: &#123;</div><div class="line">      <span class="attr">id</span>: self.id</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">class</span>: &#123;</div><div class="line">      <span class="string">'active'</span>: (activeTab) ? activeTab.tabId === self.id : self.active</div><div class="line">    &#125;,</div><div class="line">    <span class="attr">on</span>: &#123;</div><div class="line">      <span class="string">'tab:show'</span>: self.onTabShow,</div><div class="line">      <span class="string">'tab:hide'</span>: self.onTabHide</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">    <span class="comment">//通过比对f7-tab标签的id和$router.tabId是否相同，相同则渲染对应的component</span></div><div class="line">    [activeTab &amp;&amp; activeTab.tabId === self.id ? c(activeTab.component, &#123;<span class="attr">tag</span>: <span class="string">'component'</span>, <span class="attr">props</span>: self.$route.params&#125;) : self.$slots.default]</div><div class="line">  );</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从上面的代码可以看出，<code>f7-tab</code>的内容时在页面跳转的时候进行渲染的，而通过<code>tab-link</code>进行<code>tab</code>页的切换只是修改<code>f7-tab</code>的类来显示对应的<code>tab</code>页，是无法显示其他<code>tab</code>页的内容的，需将<code>tab-link</code>改为<code>route-tab-link</code>，这样在<code>tabbar</code>中的<code>a</code>标签才会设置成<code>active</code>，而跳转则是通过<code>href</code>进行跳转，完整写法如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line">//tabbar.vue</div><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-page</span> <span class="attr">toolbar-fixed</span> <span class="attr">no-toolbar</span> <span class="attr">data-page</span>=<span class="string">"toolbar"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-navbar</span> <span class="attr">title</span>=<span class="string">"Tab Bar"</span> <span class="attr">back-link</span>=<span class="string">"Back"</span> <span class="attr">sliding</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-link</span> <span class="attr">icon</span>=<span class="string">"icon icon-bars"</span> <span class="attr">open-panel</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-navbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-toolbar</span> <span class="attr">tabbar</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">route-tab-link</span>=<span class="string">"#tab1"</span></div><div class="line">        <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/"</span></div><div class="line">        <span class="attr">active</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"help"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"help_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">route-tab-link</span>=<span class="string">"#tab2"</span></div><div class="line">        <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab2/"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"drawers"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">f7-badge</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">f7-badge</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"drawers_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">f7-badge</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">f7-badge</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">route-tab-link</span>=<span class="string">"#tab3"</span></div><div class="line">        <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab3/"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"cloud"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"cloud_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">route-tab-link</span>=<span class="string">"#tab4"</span></div><div class="line">        <span class="attr">href</span>=<span class="string">"/navbarsAndToolbars/tabbar/tab4/"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"camera"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"camera_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-toolbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-tabs</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">id</span>=<span class="string">"tab1"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">id</span>=<span class="string">"tab2"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">id</span>=<span class="string">"tab3"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-tab</span> <span class="attr">id</span>=<span class="string">"tab4"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-tab</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-tabs</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-page</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">"less"</span>&gt;</span><span class="undefined"></span></div><div class="line">.page[data-page="toolbar"]&#123;</div><div class="line">  .page-content&#123;</div><div class="line">    padding-bottom: 44px;</div><div class="line">  &#125;</div><div class="line">  .toolbar&#123;</div><div class="line">    transform: none;</div><div class="line">    transition: 0ms;</div><div class="line"></div><div class="line">    .active-state&#123;</div><div class="line">      opacity: 1;</div><div class="line">      transition: 0ms;</div><div class="line">    &#125;</div><div class="line">    a.active&#123;</div><div class="line">      i.inactive&#123;</div><div class="line">        display: none;</div><div class="line">      &#125;</div><div class="line">      i.active&#123;</div><div class="line">        margin-left: 0;</div><div class="line">        color: #007aff;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  .tabbar&#123;</div><div class="line">    a:not(.active)&#123;</div><div class="line">      i.active&#123;</div><div class="line">        display: none;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line"></div><div class="line">//tab1.vue</div><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>tab1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//tab2.vue</div><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>tab2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//tab3.vue</div><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>tab3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line">//tab4.vue</div><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>tab4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//route.js</span></div><div class="line">&#123;</div><div class="line">  <span class="attr">path</span>: <span class="string">'/navbarsAndToolbars/tabbar/'</span>,</div><div class="line">  <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tabbar.vue'</span>),</div><div class="line">  <span class="attr">tabs</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab1'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab1.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab2/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab2'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab2.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab3/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab3'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab3.vue'</span>)</div><div class="line">    &#125;, &#123;</div><div class="line">      <span class="attr">path</span>: <span class="string">'/tab4/'</span>,</div><div class="line">      <span class="attr">tabId</span>: <span class="string">'tab4'</span>,</div><div class="line">      <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/navbarsAndToolbars/tab4.vue'</span>)</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其实不用<code>tab</code>的层级路由，直接在<code>tabbar.vue</code>中引入<code>Vue</code>组件并将其放到对应的<code>f7-tab</code>的方式要方便多了</p>
<blockquote>
<p>以上这种通过<code>tab</code>层级路由实现<code>tabbar</code>的方式，由于是在一个页面中，并且只有一个<code>.page-content</code>，所以当<code>tab</code>页滚动后，再切换到其他<code>tab</code>页时，此时的<code>tab</code>页的位置处于上一个<code>tab</code>页滚动后的位置。<br>若要实现不同<code>tab</code>页滚动位置不同，可以将<code>.page-content</code>作为<code>tab</code>页，并使用多个<code>.page-content</code>，可查看相关文档：<a href="http://framework7.io/vue/page.html" target="_blank" rel="external">page</a>中的 “Page Content as Tabs” 部分。记住，这时不能使用层级路由，就按照官方文档最初始的写法，代码实现如下：</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-page</span> <span class="attr">no-toolbar</span> <span class="attr">toolbar-fixed</span> <span class="attr">tabs</span> <span class="attr">no-page-content</span> <span class="attr">data-page</span>=<span class="string">"toolbar"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-navbar</span> <span class="attr">title</span>=<span class="string">"Diff Scroll Tab Bar"</span> <span class="attr">back-link</span>=<span class="string">"Back"</span> <span class="attr">sliding</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-link</span> <span class="attr">icon</span>=<span class="string">"icon icon-bars"</span> <span class="attr">open-panel</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-navbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-toolbar</span> <span class="attr">tabbar</span> <span class="attr">labels</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">tab-link</span>=<span class="string">"#tab1"</span></div><div class="line">        <span class="attr">no-link-class</span></div><div class="line">        <span class="attr">active</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"help"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"help_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tabbar-label"</span>&gt;</span>Information<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">tab-link</span>=<span class="string">"#tab2"</span></div><div class="line">        <span class="attr">no-link-class</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"drawers"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">f7-badge</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">f7-badge</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"drawers_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">f7-badge</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">f7-badge</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tabbar-label"</span>&gt;</span>Inbox<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">tab-link</span>=<span class="string">"#tab3"</span></div><div class="line">        <span class="attr">no-link-class</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"cloud"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span>  </div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"cloud_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tabbar-label"</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-link</span></span></div><div class="line">        <span class="attr">tab-link</span>=<span class="string">"#tab4"</span></div><div class="line">        <span class="attr">no-link-class</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"camera"</span> <span class="attr">class</span>=<span class="string">"inactive"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-icon</span> <span class="attr">f7</span>=<span class="string">"camera_fill"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-icon</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tabbar-label"</span>&gt;</span>Photos<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-toolbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-page-content</span> <span class="attr">tab</span> <span class="attr">active</span> <span class="attr">id</span>=<span class="string">"tab1"</span>&gt;</span><span class="tag">&lt;<span class="name">tab1</span>&gt;</span><span class="tag">&lt;/<span class="name">tab1</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-page-content</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-page-content</span> <span class="attr">tab</span> <span class="attr">id</span>=<span class="string">"tab2"</span>&gt;</span><span class="tag">&lt;<span class="name">tab2</span>&gt;</span><span class="tag">&lt;/<span class="name">tab2</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-page-content</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-page-content</span> <span class="attr">tab</span> <span class="attr">id</span>=<span class="string">"tab3"</span>&gt;</span><span class="tag">&lt;<span class="name">tab3</span>&gt;</span><span class="tag">&lt;/<span class="name">tab3</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-page-content</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-page-content</span> <span class="attr">tab</span> <span class="attr">id</span>=<span class="string">"tab4"</span>&gt;</span><span class="tag">&lt;<span class="name">tab4</span>&gt;</span><span class="tag">&lt;/<span class="name">tab4</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-page-content</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-page</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">import</span> Tab1 <span class="keyword">from</span> <span class="string">'./tab1'</span></div><div class="line"><span class="keyword">import</span> Tab2 <span class="keyword">from</span> <span class="string">'./tab2'</span></div><div class="line"><span class="keyword">import</span> Tab3 <span class="keyword">from</span> <span class="string">'./tab3'</span></div><div class="line"><span class="keyword">import</span> Tab4 <span class="keyword">from</span> <span class="string">'./tab4'</span></div><div class="line"></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  <span class="attr">components</span>: &#123; Tab1, Tab2, Tab3, Tab4 &#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;style lang="less"&gt;</div><div class="line">.page[data-page="toolbar"]&#123;</div><div class="line">  .page-content&#123;</div><div class="line">    padding-bottom: 44px;</div><div class="line">  &#125;</div><div class="line">  .toolbar&#123;</div><div class="line">    transform: none;</div><div class="line">    transition: 0ms;</div><div class="line"></div><div class="line">    .active-state&#123;</div><div class="line">      opacity: 1;</div><div class="line">      transition: 0ms;</div><div class="line">    &#125;</div><div class="line">    a.active&#123;</div><div class="line">      i.inactive&#123;</div><div class="line">        display: none;</div><div class="line">      &#125;</div><div class="line">      i.active&#123;</div><div class="line">        margin-left: 0;</div><div class="line">        color: #007aff;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  .tabbar&#123;</div><div class="line">    a:not(.active)&#123;</div><div class="line">      i.active&#123;</div><div class="line">        display: none;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure>
<hr>
<p>framework7踩坑记（二）就更到这，后面继续更新<br>基于<code>framework7-vue</code>实现的官方实例 <a href="https://github.com/yawuling/vue-framework7" target="_blank" rel="external">vue-framework7</a>，持续更新中，欢迎star</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上一篇博客“Framework7+Framework7-vue+vue踩坑记（一）”，这里继续&lt;code&gt;framework7&lt;/code&gt;+&lt;code&gt;vue&lt;/code&gt;+&lt;code&gt;framework7-vue&lt;/code&gt;踩坑第二波，同样通过重构官网demo来运用&lt;code&gt;framework-vue&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="webapp" scheme="http://blog.ywulin.com/categories/webapp/"/>
    
    
      <category term="vue" scheme="http://blog.ywulin.com/tags/vue/"/>
    
      <category term="framework7" scheme="http://blog.ywulin.com/tags/framework7/"/>
    
  </entry>
  
  <entry>
    <title>Framework7+Framework7-vue+vue踩坑记（一）</title>
    <link href="http://blog.ywulin.com/201707141526.html"/>
    <id>http://blog.ywulin.com/201707141526.html</id>
    <published>2017-07-14T07:27:13.000Z</published>
    <updated>2018-04-06T09:00:27.654Z</updated>
    
    <content type="html"><![CDATA[<p>网上关于<code>framework7-vue</code>的博客基本没有，所以我决定用它来重构官网的Demo，来踩波坑，以下是我在使用<code>framework7-vue</code>时遇到的一些需要注意的点</p>
<a id="more"></a>
<hr>
<h3 id="1-this指向"><a href="#1-this指向" class="headerlink" title="1. this指向"></a>1. <code>this</code>指向</h3><p>在定时器和<code>framework7</code>的api回调函数中，<code>this</code>会被修改指向其他作用域，在定时器或回调api调用之前定义一个变量保存指向<code>vue</code>作用域的<code>this</code></p>
<h3 id="2-Autocomplete功能实现"><a href="#2-Autocomplete功能实现" class="headerlink" title="2. Autocomplete功能实现"></a>2. Autocomplete功能实现</h3><p><code>framework7-vue</code>没有<code>Autocomplete</code>组件，需要自己手动实现，<code>Autocomplete</code>主要通过js进行配置和初始化，自定义选项较多。<br><code>Autocomplete</code>需要使用到<code>f7-list</code>组件作为输入的容器，代码如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-list</span> <span class="attr">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-label</span>&gt;</span>Fruit<span class="tag">&lt;/<span class="name">f7-label</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Fruit"</span> <span class="attr">id</span>=<span class="string">"autocomplete-dropdown"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-input</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-list</span>&gt;</span></div></pre></td></tr></table></figure>
<p>此外还需要在<code>vue</code>的生命周期<code>mounted</code>中进行初始化<br>tips：不能在<code>created</code>中进行初始化，这时候模板尚未编译挂载，无法将插件绑定到dom上</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">data() &#123;</div><div class="line">  <span class="keyword">return</span> &#123;</div><div class="line">    <span class="attr">fruits</span>: (<span class="string">'Apple Apricot Avocado Banana Melon Orange Peach Pear Pineapple'</span>).split(<span class="string">' '</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">mounted() &#123;</div><div class="line">  <span class="comment">//注意，这里在插件初始化中this并非指向Vue实例的</span></div><div class="line">  <span class="keyword">let</span> fruits = <span class="keyword">this</span>.fruits;</div><div class="line">  <span class="keyword">let</span> autocompleteDropdownSimple = <span class="built_in">window</span>.f7.autocomplete(&#123;</div><div class="line">    <span class="attr">input</span>: <span class="string">'#autocomplete-dropdown'</span>,</div><div class="line">    <span class="attr">openIn</span>: <span class="string">'dropdown'</span>,</div><div class="line">    <span class="attr">source</span>: <span class="function"><span class="keyword">function</span> (<span class="params">autocomplete, query, render</span>) </span>&#123;</div><div class="line">      <span class="keyword">let</span> results = []</div><div class="line">      <span class="keyword">if</span> (query.length === <span class="number">0</span>) &#123;</div><div class="line">        render(results)</div><div class="line">        <span class="keyword">return</span></div><div class="line">      &#125;</div><div class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; fruits.length; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (fruits[i].toLowerCase().indexOf(query.toLowerCase()) &gt;= <span class="number">0</span>) &#123;</div><div class="line">          results.push(fruits[i])</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      render(results)</div><div class="line">    &#125;</div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其他类型的选项请参照官网原生文档实现：<a href="http://docs.framework7.cn/Index/autocomplete.html" target="_blank" rel="external">http://docs.framework7.cn/Index/autocomplete.html</a></p>
<h3 id="3-this-amp-this-Dom7-中无jsonp请求"><a href="#3-this-amp-this-Dom7-中无jsonp请求" class="headerlink" title="3. this.$$ &amp; this.Dom7 中无jsonp请求"></a>3. this.$$ &amp; this.Dom7 中无<code>jsonp</code>请求</h3><p>在this.$$中无jsonp请求，若要使用jsonp，可安装<code>vue-resource</code>（不过该插件作者已宣布不再更新），用法一样</p>
<h3 id="4-Calendar-Datepicker"><a href="#4-Calendar-Datepicker" class="headerlink" title="4. Calendar / Datepicker"></a>4. Calendar / Datepicker</h3><p><code>framework7-vue</code>没有<code>Calendar / Datepicker</code>的组件，需要手动实现，跟Autocomplete一样，代码如下</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-page</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list</span> <span class="attr">form</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-list-item</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"Select date"</span> <span class="attr">readonly</span> <span class="attr">id</span>=<span class="string">"calendar-disabled"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-input</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-list</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-page</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</div><div class="line">  mounted () &#123;</div><div class="line">    <span class="keyword">let</span> calendarDefault = <span class="keyword">this</span>.$f7.calendar(&#123;</div><div class="line">      <span class="attr">input</span>: <span class="string">'#calendar-default'</span></div><div class="line">    &#125;)</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="5-Contacts"><a href="#5-Contacts" class="headerlink" title="5. Contacts"></a>5. Contacts</h3><p><code>framework7-vue</code>中有<code>contacts-list</code>组件，其<code>.list.group-title</code>在谷歌浏览器调试时，<code>position: sticky</code>中top是相对于viewport定位的，所以滚动后处于浏览器顶部，被navbar遮住，但在手机上是正常显示的，其top是相对于<code>.page-content</code>定位的</p>
<h3 id="6-层级路由"><a href="#6-层级路由" class="headerlink" title="6. 层级路由"></a>6. 层级路由</h3><p><code>framework7-vue</code>在本文章撰写时除了在同页面Tab中有层级路由外，没有实现页面间的层级路由，跟<code>vue-router</code>不一样，要实现页面间的层级跳转，路由的写法跟平时写法一致，直接跳转即可，如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="attr">path</span>: <span class="string">'/floatingAction/'</span>,</div><div class="line">    <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/floatingAction/floatingAction.vue'</span>),</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">	<span class="comment">//我这里为了显示出层级关系，将其上一级页面的路由也包含进去，事实上是可以不用这么做的</span></div><div class="line">    path: <span class="string">'/floatingAction/staticFloating/'</span>,</div><div class="line">    <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/floatingAction/staticFloating.vue'</span>)</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="attr">path</span>: <span class="string">'/floatingAction/speedDial/'</span>,</div><div class="line">    <span class="attr">component</span>: <span class="built_in">require</span>(<span class="string">'./pages/floatingAction/speedDial.vue'</span>)</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="7-f7-input-type-”select”"><a href="#7-f7-input-type-”select”" class="headerlink" title="7. f7-input: type=”select”"></a>7. f7-input: type=”select”</h3><p><code>f7-input</code>中设置<code>type=&quot;select&quot;</code>，不会有默认选中项，需要在<code>f7-input</code>中绑定<code>v-model=&quot;selected&quot;</code>，而给<code>option</code>设置<code>selected</code>属性是不会显示选中项的</p>
<h3 id="8-无限滚动Infinite-Scroll"><a href="#8-无限滚动Infinite-Scroll" class="headerlink" title="8. 无限滚动Infinite Scroll"></a>8. 无限滚动Infinite Scroll</h3><p>无限滚动的实现是在<code>f7-page</code>中加上<code>infinite-scroll</code>，滚动事件为<code>@infinite=&quot;doSomething&quot;</code>，页面每次变更都需要重新刷新一次浏览器，否则<code>infinite</code>事件不会绑定，<code>infinite-scroll</code>是在<code>page:init</code>即页面初始化时初始化的，而热加载不会重新执行一遍<code>page:init</code>。以下是代码实现：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">f7-page</span> <span class="attr">infinite-scroll</span> @<span class="attr">infinite</span>=<span class="string">"onInfiniteScroll"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-navbar</span> <span class="attr">title</span>=<span class="string">"Infinite Scroll"</span> <span class="attr">back-link</span>=<span class="string">"返回"</span> <span class="attr">sliding</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">f7-link</span> <span class="attr">icon</span>=<span class="string">"icon icon-bars"</span> <span class="attr">open-panel</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-link</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">f7-nav-right</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-navbar</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-block-title</span>&gt;</span>SCROLL BOTTOM<span class="tag">&lt;/<span class="name">f7-block-title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">f7-list-item</span> <span class="attr">v-for</span>=<span class="string">"item in items"</span> <span class="attr">:title</span>=<span class="string">"'Item ' + item"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-list</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">f7-page</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</div><div class="line">  data () &#123;</div><div class="line">    <span class="keyword">return</span> &#123;</div><div class="line">      <span class="attr">items</span>: <span class="number">20</span>,</div><div class="line">      <span class="attr">loading</span>: <span class="literal">false</span>,</div><div class="line">      <span class="attr">maxLength</span>: <span class="number">60</span></div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">methods</span>: &#123;</div><div class="line">    <span class="attr">onInfiniteScroll</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.loading) &#123;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">      &#125;</div><div class="line"></div><div class="line">      <span class="keyword">this</span>.loading = <span class="literal">true</span>;</div><div class="line"></div><div class="line">      <span class="keyword">let</span> _this = <span class="keyword">this</span>;</div><div class="line"></div><div class="line">      setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        _this.loading = <span class="literal">false</span>;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (_this.items &gt;= _this.maxLength) &#123;</div><div class="line">          _this.$f7.detachInfiniteScroll(_this.$$(<span class="string">'.infinite-scroll'</span>))</div><div class="line">          _this.$$(<span class="string">'.infinite-scroll-preloader'</span>).remove()</div><div class="line">          <span class="keyword">return</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        _this.items += <span class="number">20</span>;</div><div class="line">      &#125;, <span class="number">1000</span>)</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>
<h3 id="9-f7-list的灵活性"><a href="#9-f7-list的灵活性" class="headerlink" title="9. f7-list的灵活性"></a>9. <code>f7-list</code>的灵活性</h3><p><code>f7-list</code>的比较灵活，严格来说应该是<code>f7-list-item</code>比较灵活，自由度高，该组件在设计时添加了不少slot选项来分发内容</p>
<p><img src="http://oqn7d0y3s.bkt.clouddn.com/20170714152602.jpg" alt="f7-list-item的slots分发"></p>
<p>灵活运用slots可以实现各种列表效果，如以下效果：</p>
<center><img src="http://oqn7d0y3s.bkt.clouddn.com/20170714152601.jpg" alt="f7-list-item的slots分发效果"></center>

<p>代码的实现如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">f7-list-item</span> <span class="attr">title</span>=<span class="string">"No icons here"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">slot</span>=<span class="string">"root"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list-item</span></span></div><div class="line">      <span class="attr">link</span>=<span class="string">"#"</span></div><div class="line">      <span class="attr">media</span>=<span class="string">"&lt;i class='icon icon-f7'&gt;&lt;/i&gt;"</span></div><div class="line">      <span class="attr">title</span>=<span class="string">"Ivan Petrov"</span></div><div class="line">      <span class="attr">after</span>=<span class="string">"CEO"</span></div><div class="line">    &gt;<span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list-item</span></span></div><div class="line">      <span class="attr">link</span>=<span class="string">"#"</span></div><div class="line">      <span class="attr">media</span>=<span class="string">"&lt;i class='icon icon-f7'&gt;&lt;/i&gt;&lt;i class='icon icon-f7'&gt;&lt;/i&gt;"</span></div><div class="line">      <span class="attr">title</span>=<span class="string">"Two icons here"</span></div><div class="line">    &gt;<span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list-item</span> <span class="attr">title</span>=<span class="string">"No icons here"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list-item</span></span></div><div class="line">      <span class="attr">link</span>=<span class="string">"#"</span></div><div class="line">      <span class="attr">media</span>=<span class="string">"&lt;i class='icon icon-f7'&gt;&lt;/i&gt;"</span></div><div class="line">      <span class="attr">title</span>=<span class="string">"Ultra long text goes here, no, it is really really long"</span></div><div class="line">    &gt;<span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">f7-list-item</span></span></div><div class="line">      <span class="attr">media</span>=<span class="string">"&lt;i class='icon icon-f7'&gt;&lt;/i&gt;"</span></div><div class="line">      <span class="attr">title</span>=<span class="string">"With switch"</span>&gt;</div><div class="line">      <span class="tag">&lt;<span class="name">f7-input</span> <span class="attr">type</span>=<span class="string">'switch'</span> <span class="attr">slot</span>=<span class="string">"after"</span>&gt;</span><span class="tag">&lt;/<span class="name">f7-input</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">f7-list-item</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="10-router"><a href="#10-router" class="headerlink" title="10. $router"></a>10. $router</h3><p>要在<code>javascript</code>中使用路由<code>$router</code>，用法为<code>this.$router</code>，<code>$router</code>是保存在<code>vue</code>作用域中的</p>
<hr>
<p><code>framework7-vue</code>的注意点目前就写到这，后面继续更新<br>基于<code>framework7-vue</code>实现的官方实例 <a href="https://github.com/yawuling/vue-framework7" target="_blank" rel="external">vue-framework7</a>，持续更新中，欢迎star</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上关于&lt;code&gt;framework7-vue&lt;/code&gt;的博客基本没有，所以我决定用它来重构官网的Demo，来踩波坑，以下是我在使用&lt;code&gt;framework7-vue&lt;/code&gt;时遇到的一些需要注意的点&lt;/p&gt;
    
    </summary>
    
      <category term="webapp" scheme="http://blog.ywulin.com/categories/webapp/"/>
    
    
      <category term="vue" scheme="http://blog.ywulin.com/tags/vue/"/>
    
      <category term="framework7" scheme="http://blog.ywulin.com/tags/framework7/"/>
    
  </entry>
  
  <entry>
    <title>gulp自动化构建工具学习</title>
    <link href="http://blog.ywulin.com/201706251602.html"/>
    <id>http://blog.ywulin.com/201706251602.html</id>
    <published>2017-06-25T08:02:45.000Z</published>
    <updated>2018-04-06T08:59:21.245Z</updated>
    
    <content type="html"><![CDATA[<p>Gulp.js 是一个自动化构建工具,开发者可以使用它在项目开发过程中自动执行常见任务。在这里介绍了gulp的入门，插件和gulpfile.js配置文件。</p>
<a id="more"></a>
<h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><ol>
<li><p>全局安装<code>gulp</code></p>
<pre><code>$ npm install -g gulp
</code></pre></li>
<li><p>新建一个文件夹作为项目，进入该文件夹，初始化</p>
<pre><code>$ mkdir example
$ npm init
</code></pre></li>
<li><p>安装开发依赖（<code>devDependences</code>）</p>
<pre><code>$ npm install --save-dev gulp
</code></pre></li>
<li><p>在项目根目录新建 <code>gulpfile.js</code> 文件</p>
<pre><code>$ touch gulpfile.js
</code></pre></li>
<li><p>编辑<code>gulpfile.js</code>文件</p>
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"></div><div class="line">   gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">   	<span class="comment">//默认任务代码</span></div><div class="line">   &#125;);</div></pre></td></tr></table></figure>
</li>
<li><p>命令行运行gulp，即可运行默认任务</p>
<pre><code>$ gulp
</code></pre></li>
</ol>
<hr>
<h3 id="api介绍"><a href="#api介绍" class="headerlink" title="api介绍"></a>api介绍</h3><blockquote>
<p>这里只列出api常用用法，了解更多请查阅官网<a href="http://www.gulpjs.com.cn/docs/api/" target="_blank" rel="external">http://www.gulpjs.com.cn/docs/api/</a></p>
</blockquote>
<ol>
<li><p>gulp.src(globs[, options])</p>
<p> 输出符合匹配的文件并返回一个<code>stream</code>，可<code>pipe</code>到其他插件</p>
<ul>
<li><p>golbs(类型：<code>String</code>或<code>Array</code>)</p>
<blockquote>
<p>String: ‘src/js/*.js’<br>Array: [‘src/js/*.js’, ‘src/css/*.css’]</p>
</blockquote>
</li>
</ul>
</li>
<li><p>gulp.dest(path[, options])</p>
<p> 将<code>pipe</code>进来的数据转存为指定文件夹下的文件，若指定文件夹不存在，则自动创建该文件夹</p>
<ul>
<li><p>path(类型：<code>String</code>或<code>Function</code>)</p>
<blockquote>
<p>String: ‘dist/js’<br>Function: 在函数中返回相应路径</p>
</blockquote>
</li>
</ul>
</li>
<li><p>gulp.task(name[, deps], fn)</p>
<p> 定义一个任务</p>
 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'something'</span>, functio () &#123;</div><div class="line">	doSomething();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ul>
<li><p>name(类型：<code>String</code>)</p>
<blockquote>
<p>任务的名字，可在命令行中通过<code>name</code>运行任务，<code>$ gulp name</code></p>
</blockquote>
</li>
<li><p>deps(类型：Array)</p>
<blockquote>
<p>一个包含任务列表的数组，这些任务会在当前任务运行之前完成</p>
</blockquote>
</li>
<li><p>fn(类型：<code>Function</code>)</p>
<blockquote>
<p>该任务要执行的内容</p>
</blockquote>
</li>
</ul>
</li>
<li><p>gulp.watch(glob[, opts], tasks) 或 gulp.watch(globs[, opts, cb])</p>
<p> 文件监视，当指定匹配文件发生变化时，执行tasks或函数cb</p>
<ul>
<li><p>glob(类型：<code>String</code>或<code>Array</code>)</p>
</li>
<li><p>tasks(类型：<code>String</code>或<code>Array</code>)</p>
<blockquote>
<p>文件变动后执行之前定义好的任务</p>
</blockquote>
</li>
<li><p>cb(类型： <code>Function</code>)</p>
<blockquote>
<p>传入一个记录文件变动的<code>event</code>对象，<code>event.type</code>记录变动类型：<code>added</code>, <code>changed</code>, <code>deleted</code>；<code>event.path</code>记录变动文件的路径</p>
</blockquote>
</li>
</ul>
</li>
</ol>
<hr>
<h3 id="gulp插件介绍"><a href="#gulp插件介绍" class="headerlink" title="gulp插件介绍"></a>gulp插件介绍</h3><ol>
<li><p>gulp-less/gulp-sass</p>
<p> 预编译less/sass文件为css文件</p>
<p> 安装：<code>$ npm install --save-dev gulp-less</code></p>
</li>
<li><p>gulp-autoprefixer</p>
<p> 设置浏览器版本，css文件自动添加浏览器前缀</p>
<p> 安装：<code>$ npm install --save-dev gulp-autoprefixer</code></p>
</li>
<li><p>gulp-minify-css</p>
<p> 压缩css文件</p>
<p> 安装：<code>$ npm install --save-dev gulp-minify-css</code></p>
</li>
<li><p>gulp-rename</p>
<p> 重命名要输出的文件，如将.css重命名为.min.css</p>
<p> 安装：<code>$ npm install --save-dev gulp-rename</code></p>
</li>
<li><p>vinyl-buffer</p>
<p> 将vinyl对象内容中的stream转换为buffer</p>
<p> 安装：<code>$ npm install --save-dev vinyl-buffer</code></p>
</li>
<li><p>vinyl-source-stream</p>
<p> 将Browserify的bundle()的输出转换为Gulp可用的vinyl流</p>
<p> 安装：<code>$ npm install --save-dev vinyl-source-stream</code></p>
</li>
<li><p>gulp-sourcemaps</p>
<p> 编写内联sourcemaps</p>
<p> 安装：<code>$ npm install --save-dev gulp-sourcemaps</code></p>
</li>
<li><p>browserify</p>
<p> 可以让你使用类似于 node 的 require() 的方式来组织浏览器端的 Javascript 代码，在这里用来管理依赖</p>
<p> 安装：<code>$ npm install --save-dev browserify</code></p>
</li>
<li><p>babelify</p>
<p> 将ES6转换成ES5</p>
<p> 安装：<code>$ npm install --save-dev babelify</code></p>
</li>
<li><p>gulp-uglify</p>
<p>压缩 JavaScript 文件</p>
<p>安装：<code>$ npm install --save-dev gulp-uglify</code></p>
</li>
<li><p>gulp-imagemin</p>
<p>压缩 png，jpeg，gif和svg图片资源</p>
<p>安装：<code>$ npm install --save-dev gulp-imagemin</code></p>
</li>
<li><p>gulp-cache</p>
<p>图片缓存，只有图片替换了才压缩</p>
<p>安装：<code>$ npm install --save-dev gulp-cache</code></p>
</li>
<li><p>gulp-clean</p>
<p>移除文件或文件夹</p>
<p>安装：<code>$ npm install --save-dev gulp-clean</code></p>
</li>
<li><p>gulp-util</p>
<p>包含gulp的一些实用功能，在这里用来打印编译错误</p>
<p>安装：<code>$ npm install --save-dev gulp-util</code></p>
</li>
<li><p>gulp-notify</p>
<p>当文件变更时提醒</p>
<p>安装：<code>$ npm install gulp-notify</code></p>
</li>
<li><p>gulp-connect</p>
<p>gulp中用来运行服务器的插件，内含LiveReload，自动刷新浏览器</p>
<p>安装：<code>$ npm install --save-dev gulp-connect</code></p>
</li>
</ol>
<hr>
<h3 id="gulpfile-js文件配置"><a href="#gulpfile-js文件配置" class="headerlink" title="gulpfile.js文件配置"></a>gulpfile.js文件配置</h3><ul>
<li>内含 ES6 转 ES5</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</div><div class="line">    less = <span class="built_in">require</span>(<span class="string">'gulp-less'</span>),</div><div class="line">    autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>),</div><div class="line">    minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>),</div><div class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</div><div class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>),</div><div class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>),</div><div class="line">    clean = <span class="built_in">require</span>(<span class="string">'gulp-clean'</span>),</div><div class="line">    cache = <span class="built_in">require</span>(<span class="string">'gulp-cache'</span>),</div><div class="line">    notify = <span class="built_in">require</span>(<span class="string">'gulp-notify'</span>),</div><div class="line">    browserify = <span class="built_in">require</span>(<span class="string">'browserify'</span>),</div><div class="line">    babelify = <span class="built_in">require</span>(<span class="string">'babelify'</span>),</div><div class="line">    buffer = <span class="built_in">require</span>(<span class="string">'vinyl-buffer'</span>),</div><div class="line">    source = <span class="built_in">require</span>(<span class="string">'vinyl-source-stream'</span>),</div><div class="line">    sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>),</div><div class="line">    gutil = <span class="built_in">require</span>(<span class="string">'gulp-util'</span>),</div><div class="line">    connect = <span class="built_in">require</span>(<span class="string">'gulp-connect'</span>);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * styles任务，将'src/less'目录下的less文件转换成css文件，</div><div class="line"> * 并加上浏览器前缀，存放于'dist/css'目录下，之后重命名加上.min，压缩，</div><div class="line"> * 保存为.min.css文件，之后刷新浏览器，并提醒style任务完成</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'styles'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/less/*.less'</span>)</div><div class="line">        .pipe(less())</div><div class="line">        .pipe(autoprefixer(<span class="string">'last 2 version'</span>, <span class="string">'safari 5'</span>, <span class="string">'ie 8'</span>,</div><div class="line">        <span class="string">'ie 9'</span>, <span class="string">'opera 12.1'</span>, <span class="string">'ios 6'</span>, <span class="string">'android 4'</span>))</div><div class="line">        .on(<span class="string">'error'</span>, gutil.log)</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/css'</span>))</div><div class="line">        .pipe(rename(&#123;<span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</div><div class="line">        .pipe(sourcemaps.init())</div><div class="line">        .pipe(minifycss())</div><div class="line">        .pipe(sourcemaps.write(<span class="string">'./'</span>))</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/css'</span>))</div><div class="line">        .pipe(connect.reload())</div><div class="line">        .pipe(notify(&#123;<span class="attr">message</span>: <span class="string">'style task complete'</span>&#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * scripts任务，通过browserify设置入口文件，然后用babelify将</div><div class="line"> * es6转换成es5，保存在'dist/js'目录下，之后压缩js文件，重命名</div><div class="line"> * 保存为.min.js文件</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'scripts'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> b = browserify(&#123;</div><div class="line">        <span class="attr">entries</span>: <span class="string">'src/js/cart.js'</span>,</div><div class="line">        <span class="attr">debug</span>: <span class="literal">true</span></div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> b.transform(babelify.configure(&#123;</div><div class="line">            <span class="attr">presets</span>: [<span class="string">"es2015"</span>]</div><div class="line">        &#125;))</div><div class="line">        .bundle()</div><div class="line">        .on(<span class="string">'error'</span>, gutil.log)</div><div class="line">        .pipe(source(<span class="string">'cart.js'</span>))</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/js'</span>))</div><div class="line">        .pipe(buffer())</div><div class="line">        .pipe(sourcemaps.init(&#123;<span class="attr">loadMaps</span>: <span class="literal">true</span>&#125;))</div><div class="line">        .pipe(uglify())</div><div class="line">        .on(<span class="string">'error'</span>, gutil.log)</div><div class="line">        .pipe(sourcemaps.write(<span class="string">'./'</span>))</div><div class="line">        .pipe(rename(&#123; <span class="attr">suffix</span>: <span class="string">'.min'</span>&#125;))</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/js'</span>))</div><div class="line">        .pipe(connect.reload());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * images任务，读取'src/img'目录下的图片，压缩并保存到'dist/img'目录下</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'images'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/img/*'</span>)</div><div class="line">        .pipe(cache(imagemin([</div><div class="line">            imagemin.gifsicle(&#123;<span class="attr">interlaced</span>: <span class="literal">true</span>&#125;),</div><div class="line">            imagemin.jpegtran(&#123;<span class="attr">progressive</span>: <span class="literal">true</span>&#125;),</div><div class="line">            imagemin.optipng(&#123;<span class="attr">optimizationLevel</span>: <span class="number">5</span>&#125;),</div><div class="line">            imagemin.svgo(&#123;<span class="attr">plugins</span>: [&#123;<span class="attr">removeViewBox</span>: <span class="literal">true</span>&#125;]&#125;)])))</div><div class="line">        .on(<span class="string">'error'</span>, gutil.log)</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/img'</span>))</div><div class="line">        .pipe(connect.reload());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * html任务，读取'src'目录下的html文件，并保存到'dist'目录下</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/shangcheng/*.html'</span>)</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/'</span>))</div><div class="line">        .pipe(connect.reload());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * connect任务，运行服务器并自动刷新浏览器</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'connect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    connect.server(&#123;</div><div class="line">        <span class="attr">livereload</span>: <span class="literal">true</span></div><div class="line">    &#125;);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * clean任务，将dist目录下的css文件，js文件，图片文件和html文件清除</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'dist/css'</span>, <span class="string">'dist/js'</span>, <span class="string">'dist/img'</span>,</div><div class="line">    <span class="string">'dist/*.html'</span>], &#123;<span class="attr">read</span>: <span class="literal">false</span>&#125;)</div><div class="line">        .pipe(clean());</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * 默认任务，在开始执行styles任务，scripts任务，images任务，html任务</div><div class="line"> * 之前先执行clean任务</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'clean'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.start(<span class="string">'styles'</span>, <span class="string">'scripts'</span>, <span class="string">'images'</span>, <span class="string">'html'</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * 监视任务，监听less文件，js文件，图片文件和html文件的变更</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line"></div><div class="line">    <span class="comment">//监听所有.less</span></div><div class="line">    gulp.watch(<span class="string">'src/less/*.less'</span>, [<span class="string">'styles'</span>]);</div><div class="line"></div><div class="line">    <span class="comment">//监听所有.js文件</span></div><div class="line">    gulp.watch(<span class="string">'src/js/*.js'</span>, [<span class="string">'scripts'</span>]);</div><div class="line"></div><div class="line">    <span class="comment">//监听所有图片文件</span></div><div class="line">    gulp.watch(<span class="string">'src/img/*'</span>, [<span class="string">'images'</span>]);</div><div class="line"></div><div class="line">    <span class="comment">//监听html文件</span></div><div class="line">    gulp.watch(<span class="string">'src/*.html'</span>, [<span class="string">'html'</span>]);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * server任务，执行connect任务和watch任务</div><div class="line"> */</div><div class="line">gulp.task(<span class="string">'server'</span>, [<span class="string">'connect'</span>, <span class="string">'watch'</span>]);</div></pre></td></tr></table></figure>
<ul>
<li>不含 ES6 的 js 文件任务</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'scripts'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'src/js/*.js'</span>)</div><div class="line">    	.pipe(gulp.dest(<span class="string">'dist/js'</span>))</div><div class="line">        .pipe(rename(&#123; <span class="attr">suffix</span>: <span class="string">'.min'</span> &#125;))</div><div class="line">        .pipe(sourcemaps.init(&#123;<span class="attr">loadMaps</span>: <span class="literal">true</span>&#125;))</div><div class="line">    	.pipe(uglify())</div><div class="line">        .pipe(sourcemaps.write(<span class="string">'./'</span>))</div><div class="line">        .on(<span class="string">'error'</span>, gutil.log)</div><div class="line">        .pipe(gulp.dest(<span class="string">'dist/js'</span>))</div><div class="line">        .pipe(connect.reload());</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Gulp.js 是一个自动化构建工具,开发者可以使用它在项目开发过程中自动执行常见任务。在这里介绍了gulp的入门，插件和gulpfile.js配置文件。&lt;/p&gt;
    
    </summary>
    
      <category term="自动化构建工具" scheme="http://blog.ywulin.com/categories/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="gulp" scheme="http://blog.ywulin.com/tags/gulp/"/>
    
  </entry>
  
</feed>
